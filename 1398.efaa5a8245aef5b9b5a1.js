"use strict";(self.webpackChunkmusicblocks=self.webpackChunkmusicblocks||[]).push([[1398],{1398:function(e,t,o){o.r(t);var c=o(5178),n=o(9737),a=o(8785);describe("Key Signature",(function(){test("instantiation",(function(){var e=new c.default("major","c");expect(e.modeLength).toBe(7),expect(e.numberOfSemitones).toBe(12)})),test("closest note tests",(function(){var e=new c.default("major","c");expect(e.closestNote("c")[0]).toBe("c"),expect(e.noteInScale("c")).toBe(!0),expect(e.closestNote("f#")[0]).toBe("f"),expect(e.noteInScale("f#")).toBe(!1),expect(e.closestNote("g#")[0]).toBe("g"),expect(e.noteInScale("g#")).toBe(!1),expect(e.closestNote("cb")[0]).toBe("b"),expect(e.noteInScale("cb")).toBe(!0),expect(e.closestNote("db")[0]).toBe("c"),expect(e.noteInScale("db")).toBe(!1),expect(e.closestNote("n10#")[0]).toBe("n11"),expect(e.closestNote("n10x")[0]).toBe("n0"),expect(e.closestNote("sol")[0]).toBe("sol"),expect(e.closestNote("pa")[0]).toBe("pa")})),test("scalar distance",(function(){var e=new c.default("major","c");expect(e.scalarDistance("g",4,"c",4)[0]).toBe(-4),expect(e.scalarDistance("c",4,"g",4)[0]).toBe(4),expect(e.scalarDistance("g",3,"c",4)[0]).toBe(3),expect(e.scalarDistance("c",4,"g",3)[0]).toBe(-3)})),test("semitone distance",(function(){var e=new c.default("major","c");expect(e.semitoneDistance("g",4,"c",4)).toBe(-7),expect(e.semitoneDistance("c",4,"g",4)).toBe(7),expect(e.semitoneDistance("g",3,"c",4)).toBe(5),expect(e.semitoneDistance("c",4,"g",3)).toBe(-5)})),test("scalar transforms",(function(){var e=new c.default("major","c");expect(e.scalarTransform("c",2)[0]).toBe("e"),expect(e.scalarTransform("c#",2)[0]).toBe("f")})),test("semitone transforms",(function(){var e=new c.default("major","c");expect(e.semitoneTransform("c",2)[0]).toBe("d"),expect(e.semitoneTransform("c#",2)[0]).toBe("d#"),expect(e.semitoneTransform("b",1)[0]).toBe("c"),expect(e.semitoneTransform("b",1)[1]).toBe(1),expect(e.semitoneTransform("n3",1)[0]).toBe("n4"),expect(e.semitoneTransform("n3#",1)[0]).toBe("n5"),expect(e.semitoneTransform("n0",-1)[0]).toBe("n11"),expect(e.semitoneTransform("n0",-1)[1]).toBe(-1),expect(e.semitoneTransform("n0b",-1)[0]).toBe("n10"),expect(e.semitoneTransform("n0b",-1)[1]).toBe(-1),expect(e.semitoneTransform("n1b",-1)[0]).toBe("n11"),expect(e.semitoneTransform("n1b",-1)[1]).toBe(-1),expect(e.semitoneTransform("n11x",1)[0]).toBe("n2"),expect(e.semitoneTransform("n11x",1)[1]).toBe(1)})),test("invert transforms",(function(){var e=new c.default("major","c");expect(e.invert("f",5,"c",5,"even")[0]).toBe("g"),expect(e.invert("f",5,"c",5,"even")[1]).toBe(4),expect(e.invert("f",4,"c",5,"even")[1]).toBe(5),expect(e.invert("d",5,"c",5,"even")[0]).toBe("a#"),expect(e.invert("f",5,"c",5,"odd")[0]).toBe("g#"),expect(e.invert("d",5,"c",5,"odd")[0]).toBe("b"),expect(e.invert("f",5,"c",5,"scalar")[0]).toBe("g"),expect(e.invert("d",5,"c",5,"scalar")[0]).toBe("b"),expect(e.invert("g",5,"c",5,"scalar")[0]).toBe("f"),expect(e.invert("b",5,"c",5,"scalar")[0]).toBe("d");var t=new n.default;expect(Math.floor(t.getFreqByGenericNoteNameAndOctave(e.convertToGenericNoteName("a"),4)+.5)).toBe(440);var o=new c.default("chromatic","c");expect(o.modeLength).toBe(12),expect(o.numberOfSemitones).toBe(12),expect(o.scalarTransform("c",2)[0]).toBe("d"),expect(o.scalarTransform("c#",2)[0]).toBe("d#"),expect(o.semitoneTransform("c",2)[0]).toBe("d"),expect(o.semitoneTransform("c#",2)[0]).toBe("d#"),expect(o.semitoneTransform("b",1)[0]).toBe("c");var a=new c.default([2,2,1,2,2,2,7,1],"n0");expect(a.modeLength).toBe(8),expect(a.numberOfSemitones).toBe(19),expect(a.scale.length).toBe(8),expect(a.scale[7]).toBe("n18"),expect(a.closestNote("n12")[0]).toBe("n11"),expect(a.scalarTransform("n5",2)[0]).toBe("n9"),expect(a.closestNote("n10#")[0]).toBe("n11")})),test("Mode equivalents",(function(){var e=new c.default("major","e"),t=e.normalizeScale(e.scale).sort(),o=(e=new c.default("minor","db")).normalizeScale(e.scale);expect(t).toEqual(o.sort()),o=(e=new c.default("minor","c#")).normalizeScale(e.scale),expect(t).toEqual(o.sort()),o=(e=new c.default("locrian","eb")).normalizeScale(e.scale),expect(t).toEqual(o.sort()),o=(e=new c.default("locrian","d#")).normalizeScale(e.scale),expect(t).toEqual(o.sort()),o=(e=new c.default("mixolydian","b")).normalizeScale(e.scale),expect(t).toEqual(o.sort()),o=(e=new c.default("lydian","a")).normalizeScale(e.scale),expect(t).toEqual(o.sort()),o=(e=new c.default("phrygian","g#")).normalizeScale(e.scale),expect(t).toEqual(o.sort()),o=(e=new c.default("phrygian","ab")).normalizeScale(e.scale),expect(t).toEqual(o.sort()),o=(e=new c.default("dorian","f#")).normalizeScale(e.scale),expect(t).toEqual(o.sort()),o=(e=new c.default("dorian","gb")).normalizeScale(e.scale),expect(t).toEqual(o.sort()),o=(e=new c.default([2,2,1,2,2,2,1],"e")).normalizeScale(e.scale),expect(t).toEqual(o.sort())})),test("solfege mapper",(function(){var e=new c.default("major","c");expect(e.solfegeNotes.length).toBe(8),e=new c.default("major pentatonic","c"),expect(e.solfegeNotes.length).toBe(6),expect(e.solfegeNotes[2]).toBe("me"),expect(e.solfegeNotes[3]).toBe("sol"),e=new c.default("minor pentatonic","c"),expect(e.solfegeNotes.length).toBe(6),expect(e.solfegeNotes[2]).toBe("fa"),expect(e.solfegeNotes[3]).toBe("sol"),e=new c.default("whole tone","c"),expect(e.solfegeNotes.length).toBe(7),expect(e.solfegeNotes[2]).toBe("me"),expect(e.solfegeNotes[4]).toBe("sol"),e=new c.default("chromatic","c"),expect(e.solfegeNotes.length).toBe(13),expect(e.solfegeNotes[2]).toBe("re"),expect(e.solfegeNotes[3]).toBe("meb"),e=new c.default,expect(e.convertToGenericNoteName("g")).toBe("n7"),expect(e.convertToGenericNoteName("sol")).toBe("n7"),expect(e.convertToGenericNoteName("5")).toBe("n7"),expect(e.convertToGenericNoteName("pa")).toBe("n7"),expect(e.convertToGenericNoteName("g#")).toBe("n8"),expect(e.convertToGenericNoteName("sol#")).toBe("n8"),expect(e.convertToGenericNoteName("5#")).toBe("n8"),expect(e.convertToGenericNoteName("pa#")).toBe("n8"),e.customNoteNames=["charlie","delta","echo","foxtrot","golf","alfa","bravo"],expect(e.convertToGenericNoteName("golf")).toBe("n7"),expect(e.convertToGenericNoteName("golf#")).toBe("n8"),expect(e.semitoneTransform("g",3)[0]).toBe("a#"),expect(e.semitoneTransform("n7",3)[0]).toBe("n10"),expect(e.semitoneTransform("sol",3)[0]).toBe("tib"),expect(e.semitoneTransform("5",3)[0]).toBe("7b"),expect(e.semitoneTransform("pa",3)[0]).toBe("nib"),expect(e.semitoneTransform("golf",3)[0]).toBe("n10")})),test("type conversions",(function(){var e=new c.default;e.customNoteNames=["charlie","delta","echo","foxtrot","golf","alfa","bravo"],expect(e.genericNoteNameConvertToType("n7",a.LETTER_NAME)).toBe("g"),expect(e.genericNoteNameConvertToType("n7",a.SOLFEGE_NAME)).toBe("sol"),expect(e.genericNoteNameConvertToType("n8",a.SOLFEGE_NAME)).toBe("sol#"),expect(e.genericNoteNameConvertToType("n9",a.SOLFEGE_NAME)).toBe("la"),expect(e.genericNoteNameConvertToType("n7",a.EAST_INDIAN_SOLFEGE_NAME)).toBe("pa"),expect(e.genericNoteNameConvertToType("n7",a.SCALAR_MODE_NUMBER)).toBe("5"),expect(e.genericNoteNameConvertToType("n7",a.CUSTOM_NAME)).toBe("golf"),expect(e.modalPitchToLetter(4)[0]).toBe("g")})),test("pitch type check",(function(){var e=new c.default;e.customNoteNames=["charlie","delta","echo","foxtrot","golf","alfa","bravo"],expect(e.pitchNameType("g")).toBe(a.LETTER_NAME),expect(e.pitchNameType("c#")).toBe(a.LETTER_NAME),expect(e.pitchNameType("n7")).toBe(a.GENERIC_NOTE_NAME),expect(e.pitchNameType("n7b")).toBe(a.GENERIC_NOTE_NAME),expect(e.pitchNameType("sol")).toBe(a.SOLFEGE_NAME),expect(e.pitchNameType("sol#")).toBe(a.SOLFEGE_NAME),expect(e.pitchNameType("pa")).toBe(a.EAST_INDIAN_SOLFEGE_NAME),expect(e.pitchNameType("5")).toBe(a.SCALAR_MODE_NUMBER),expect(e.pitchNameType("golf")).toBe(a.CUSTOM_NAME),expect(e.pitchNameType("foobar")).toBe(a.UNKNOWN_PITCH_NAME),expect((0,a.getPitchType)("g")).toBe(a.LETTER_NAME),expect((0,a.getPitchType)("c#")).toBe(a.LETTER_NAME),expect((0,a.getPitchType)("n7")).toBe(a.GENERIC_NOTE_NAME),expect((0,a.getPitchType)("n7b")).toBe(a.GENERIC_NOTE_NAME),expect((0,a.getPitchType)("sol")).toBe(a.SOLFEGE_NAME),expect((0,a.getPitchType)("sol#")).toBe(a.SOLFEGE_NAME),expect((0,a.getPitchType)("pa")).toBe(a.EAST_INDIAN_SOLFEGE_NAME),expect((0,a.getPitchType)("5")).toBe(a.SCALAR_MODE_NUMBER),expect((0,a.getPitchType)("foobar")).toBe(a.UNKNOWN_PITCH_NAME)})),test("fixed solfege",(function(){var e=new c.default("major","g");expect(e.genericNoteNameConvertToType("n7",a.SOLFEGE_NAME)).toBe("sol"),expect(e.convertToGenericNoteName("sol")).toBe("n7"),e.fixedSolfege=!0,expect(e.fixedSolfege).toBe(!0),expect(e.genericNoteNameConvertToType("n7",a.SOLFEGE_NAME)).toBe("do"),expect(e.convertToGenericNoteName("do")).toBe("n7")})),test("frequency conversion",(function(){var e=new n.default,t=new c.default;t.customNoteNames=["charlie","delta","echo","foxtrot","golf","alfa","bravo"],expect(Number(e.getFreqByGenericNoteNameAndOctave(t.convertToGenericNoteName("g"),4).toFixed(2))).toBe(392),expect(Number(e.getFreqByGenericNoteNameAndOctave(t.convertToGenericNoteName("sol"),4).toFixed(2))).toBe(392),expect(Number(e.getFreqByGenericNoteNameAndOctave(t.convertToGenericNoteName("5"),4).toFixed(2))).toBe(392),expect(Number(e.getFreqByGenericNoteNameAndOctave(t.convertToGenericNoteName("pa"),4).toFixed(2))).toBe(392),expect(Number(e.getFreqByGenericNoteNameAndOctave(t.convertToGenericNoteName("golf"),4).toFixed(2))).toBe(392)})),test("Testing meantone scales",(function(){var e=new c.default([],"c",21);expect(e.modeLength).toBe(21),expect(e.numberOfSemitones).toBe(21),expect(e.closestNote("cb")[0]).toBe("cb"),expect(e.semitoneTransform("gb",1)[0]).toBe("g"),expect(e.semitoneTransform("cb",3)[0]).toBe("d"),expect(e.semitoneTransform("c",-3)[0]).toBe("bb"),e=new c.default([3,3,3,3,3,3,3],"c",21),expect(e.closestNote("cb")[0]).toBe("c"),expect(e.closestNote("db")[0]).toBe("d"),expect(e.closestNote("c#")[0]).toBe("c"),expect(e.scalarTransform("c",1)[0]).toBe("d"),e=new c.default("major","c",21),expect(e.closestNote("cb")[0]).toBe("c"),expect(e.closestNote("db")[0]).toBe("d"),expect(e.closestNote("c#")[0]).toBe("c"),expect(e.scalarTransform("c",1)[0]).toBe("d"),e=new c.default("lydian","bb",21),expect(e.closestNote("bb")[0]).toBe("bb"),expect(e.closestNote("n18")[0]).toBe("n17")})),test("print scales",(function(){for(var e=0,t=["major pentatonic","minor pentatonic","whole tone"];e<t.length;e++)for(var o=t[e],n=0,a=["c","g","d","a","e","b","f#","db","ab","eb","bb","f"];n<a.length;n++){var r=a[n],s=new c.default(o,r);console.log(s.toString())}}))}))}}]);