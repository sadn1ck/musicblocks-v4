"use strict";(self.webpackChunkmusicblocks=self.webpackChunkmusicblocks||[]).push([[3363],{3363:function(e,t,n){n.r(t);var a=n(9737);describe("class Temperament",(function(){describe("Temperament generation",(function(){test("Generate 'equal 12' temperament instance and verify members",(function(){var e=new a.default;expect(e.name).toBe("equal"),e.baseFrequency=a.default.C0,expect(e.baseFrequency).toBe(a.default.C0),expect(e.numberOfOctaves).toBe(8);var t=e.freqs;expect(Number(t[21].toFixed(2))).toBe(55),expect(e.noteNames.length).toBe(12)})),test("Generate 'equal 1' temperament instance when negative number of octaves is provided, and verify the numbers",(function(){var e=new a.default;e.generateEqualTemperament(-2),expect(e.numberOfSemitonesInOctave).toBe(1),expect(e.numberOfNotesInTemperament).toBe(1)})),test("Generate 'third comma meantone' temperament instance and verify frequencies",(function(){var e=new a.default("third comma meantone"),t=e.freqs;expect(Number(t[21].toFixed(2))).toBe(35.18),expect(e.noteNames.length).toBe(19)})),test("Generate 'pythagorean' temperament instance and verify frequencies",(function(){var e=new a.default("pythagorean"),t=e.freqs;expect(Number(t[21].toFixed(2))).toBe(55.19),expect(e.noteNames.length).toBe(12)})),test("Generate 'just intonation' temperament instance and verify frequencies",(function(){var e=new a.default("just intonation"),t=e.freqs;expect(Number(t[21].toFixed(2))).toBe(54.51),expect(e.noteNames.length).toBe(12)})),test("Generate 'quarter comma meantone' temperament instance and verify frequencies",(function(){var e=new a.default("quarter comma meantone"),t=e.freqs;expect(Number(t[36].toFixed(2))).toBe(55.45),expect(e.noteNames.length).toBe(21)})),test("Generate 'equal 24' temperament instance and verify frequencies",(function(){var e=new a.default;e.generateEqualTemperament(24);var t=e.freqs;expect(Number(t[42].toFixed(2))).toBe(55),expect(e.noteNames.length).toBe(24)})),test("Generate 'equal 24' temperament instance when 'Invalid' temperament is provided and verify frequencies",(function(){var e=new a.default("Invalid");e.generateEqualTemperament(24);var t=e.freqs;expect(Number(t[42].toFixed(2))).toBe(55),expect(e.noteNames.length).toBe(24)})),test("Generate custom temperament instance and verify frequencies",(function(){var e=new a.default,t={"perfect 1":Math.pow(2,1/12),"perfect 8":2};e.generateCustom(["perfect 1","perfect 8"],t,"custom"),expect(e.name).toBe("custom"),expect(e.numberOfSemitonesInOctave).toBe(2),expect(e.numberOfNotesInTemperament).toBe(9)}))})),describe("Tuning",(function(){var e=new a.default;test("Tune A4 to 440 Hz and expect 58th frequency to be 440Hz C0 (1st) to be 16.35 Hz",(function(){e.tune("a",4,440),expect(Number(e.freqs[57].toFixed(2))).toBe(440),expect(Number(e.baseFrequency.toFixed(2))).toBe(16.35)})),test("Tune A4 to 441 Hz and expect C0 to be 16.39 Hz",(function(){e.tune("a",4,441),expect(Number(e.baseFrequency.toFixed(2))).toBe(16.39),expect(Number(e.freqs[57].toFixed(2))).toBe(441)})),test("Tune gb4 to 441 Hz and expect C0 to be 19.49 Hz",(function(){e.tune("gb",4,441),expect(Number(e.baseFrequency.toFixed(2))).toBe(19.49),expect(Number(e.freqs[57].toFixed(2))).toBe(524.44)})),test("Tune z4 to 441 Hx and except a pitch not found error",(function(){expect((function(){e.tune("z",4,441)})).toThrowError("Pitch 'z' not found.")}))})),describe("Nearest Frequency Index",(function(){var e=new a.default;test("Expect the index of the frequency nearest to the target frequency i.e 440 Hz to be 57",(function(){var t=e.getNearestFreqIndex(440);expect(t).toBe(57)}))})),describe("Modal Index",(function(){var e=new a.default;test("Expect index 4 associated with a generic note name 'n4'",(function(){var t=e.getModalIndex("n4");expect(t).toBe(4)})),test("Expect index -1 when a generic note name is 'a' (invalid)",(function(){var t=e.getModalIndex("a");expect(t).toBe(-1)}))})),describe("Note Name",(function(){var e=new a.default;test("Expect generic note name 'n2' associated with an index of 2",(function(){var t=e.getNoteName(2);expect(t).toBe("n2")}))})),describe("Frequency by Index",(function(){var e=new a.default;test("Expect frequency of index 0 into the frequency list to be 16.3516",(function(){var t=e.getFreqByIndex(0);expect(t).toBe(16.3516)})),test("Expect frequency of index 20 into the frequency list to be 51.91309408272643",(function(){var t=e.getFreqByIndex(20);expect(t).toBe(51.91309408272643)}))})),describe("Frequency from Modal Index and Octave",(function(){var e=new a.default;test("Expect frequency ~ 73.42 Hz when modal index is 2 and octave is 2",(function(){var t=e.getFreqByModalIndexAndOctave(2,2);expect(Math.round(100*t)/100).toBe(73.42)})),test("Expect frequency ~ 16.35 Hz when modal index is 2 and octave is -1",(function(){var t=e.getFreqByModalIndexAndOctave(2,-1);expect(Math.round(100*t)/100).toBe(16.35)})),test("Expect frequency ~ 2637.02 Hz when modal index is 20 and octave is 100",(function(){var t=e.getFreqByModalIndexAndOctave(20,100);expect(Math.round(100*t)/100).toBe(2637.02)}))})),describe("Generic Note Name and Octave from Frequency Index",(function(){var e=new a.default;test("Expect generic note name 'n10' and octave 0 from frequency index 10",(function(){var t=e.getGenericNoteNameAndOctaveByFreqIndex(10);expect(t).toStrictEqual(["n10",0])}))})),describe("Frequency from Generic Note Name and Octave",(function(){var e=new a.default;test("Expect frequency 16.3516 Hz when generic note name is 'n0' and octave is 0",(function(){var t=e.getFreqByGenericNoteNameAndOctave("n0",0);expect(t).toBe(16.3516)})),test("Expect frequency 16.3516 Hz when generic note name is 'a' (invalid)",(function(){var t=e.getFreqByGenericNoteNameAndOctave("n0",0);expect(t).toBe(16.3516)}))})),describe("Frequency Index from Generic Note Name and Octave",(function(){var e=new a.default;test("Expect frequency index 22 when generic note name is 'n10' and octave is 1",(function(){var t=e.getFreqIndexByGenericNoteNameAndOctave("n10",1);expect(t).toBe(22)})),test("Expect frequency index 0 when generic note name is 'n10' and octave is -1",(function(){var t=e.getFreqIndexByGenericNoteNameAndOctave("n10",-1);expect(t).toBe(0)})),test("Expect frequency index 88 when generic note name is 'n10' octave is 100",(function(){var t=e.getFreqIndexByGenericNoteNameAndOctave("n10",100);expect(t).toBe(88)})),test("Get error when generic note name is 'a' and octave is 2 (invalid)",(function(){expect((function(){e.getFreqIndexByGenericNoteNameAndOctave("a",2)})).toThrowError("Note 'a' not found in generic note names.")}))})),describe("Modal Index and Octave from Frequency Index",(function(){var e=new a.default;test("Expect modal index 2 and octave 0 from frequency index 2",(function(){var t=e.getModalIndexAndOctaveFromFreqIndex(2);expect(t).toStrictEqual([2,0])}))}))}))}}]);